# Copyright 2019 Iguazio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by nuclio.export.NuclioExporter

import warnings

warnings.simplefilter(action="ignore", category=FutureWarning)

import os
import json
import requests
from mlrun.execution import MLClientCtx
from typing import List


def slack_notify(
    context: MLClientCtx,
    webhook_url: str = "URL",
    slack_blocks: List[str] = [],
    notification_text: str = "Notification",
) -> None:
    """Summarize a table
    :param context:         the function context
    :param webhook_url:     Slack incoming webhook URL. Please read: https://api.slack.com/messaging/webhooks
    :param notification_text:            Notification text
    :param slack_blocks:          Message blocks list. NOT IMPLEMENTED YET
    """

    data = {"text": notification_text}
    print("====", webhook_url)
    response = requests.post(
        webhook_url, data=json.dumps(data), headers={"Content-Type": "application/json"}
    )

    print("Response: " + str(response.text))
    print("Response code: " + str(response.status_code))
